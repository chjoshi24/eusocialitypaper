data_hap2_pr<-read.csv("Datafile S3_aphid_termite.csv",header=TRUE,row.names = 1)
#Phylogenetic regression with MPLE model
#Eusociality as a function of haplodiploidy
hap_glm_2a<-phyloglm(Eusociality~Haplodiploidy,data =data_hap2_pr,phy= tree_hap2_pr,method = c("logistic_MPLE"),boot=1000)
summary(hap_glm_2a)
#Haplodiploidy as a function of eusocuality
hap_glm_2b<-phyloglm(Haplodiploidy~Eusociality,data =data_hap2_pr,phy= tree_hap2_pr,method = c("logistic_MPLE"),boot=1000)
summary(hap_glm_2b)
summary(hap_glm_2b)
#For third analysis: Removing haplodiploidy presence for some of the families
tree_hap3_pr<-read.nexus("Datafile S1.nexus")
data_hap3_pr<-read.csv("Datafile S3_hap_removal.csv",header=TRUE,row.names = 1)
#Phylogenetic regression with MPLE model
#Eusociality as a function of haplodiploidy
hap_glm_3a<-phyloglm(Eusociality~Haplodiploidy,data =data_hap3_pr,phy= tree_hap3_pr,method = c("logistic_MPLE"),boot=1000)
summary(hap_glm_3a)
#Haplodiploidy as a function of eusocuality
hap_glm_3b<-phyloglm(Haplodiploidy~Eusociality,data =data_hap3_pr,phy= tree_hap3_pr,method = c("logistic_MPLE"),boot=1000)
summary(hap_glm_3b)
?Dtest()
#Running D.test on the data
map1<-make.simmap(tree_hap1_pr,data_hap1_pr,model="SYM",nsim=1000)
data_hap1_pr
#Running D.test on the data
data1_matrix<-as.matrix(data_hap1_pr)
data1_matrix
map1<-make.simmap(tree_hap1_pr,data1_matrix,model="SYM",nsim=1000)
map1<-make.simmap(tree_hap1_pr,data1_matrix,model="SYM",nsim=1000)
remove(data1_matrix)
#Running D.test on the data
map1<-make.simmap(tree_hap1_pr,data_hap1_pr$Haplodiploidy,model="SYM",nsim=1000)
?Dtest()
multiSimmap
?multiSimmap()
?density.multiSimmap()
class(data_hap1_pr$Haplodiploidy)
#Running D.test on the data
hap_char<-as.factor(data_hap1_pr$Haplodiploidy)
hap_char
map1<-make.simmap(tree_hap1_pr,hap_char,model="SYM",nsim=1000)
map1<-make.simmap(tree_hap1_pr,hap_char,model="ER",nsim=1000)
hap_char
remove(hap_char)
#Running D.test on the data
data_hap1_pr_mod<-setNames(data[,1],rownames(data_hap1_pr))
#Running D.test on the data
data_hap1_pr_mod<-setNames(data_hap1_pr[,1],rownames(data_hap1_pr))
data_hap1_pr_mod
map1<-make.simmap(tree_hap1_pr,data_hap1_pr_mod,model="ER",nsim=1000)
library(phylolm)
library(phytools)
library(treedata.table)
#For first analysis: Removing eusociality presence for aphids
tree_hap1_pr<-read.nexus("Datafile S1.nexus")
#Running D.test on the data
data_hap1_pr_mod<-setNames(data_hap1_pr[,1],rownames(data_hap1_pr))
#For first analysis: Removing eusociality presence for aphids
tree_hap1_pr<-read.nexus("Datafile S1.nexus")
data_hap1_pr<-read.csv("Datafile S3_aphid.csv",header=TRUE,row.names = 1)
#Running D.test on the data
data_hap1_pr_mod<-setNames(data_hap1_pr[,1],rownames(data_hap1_pr))
#Running D.test on the data
data_hap1_pr_mod<-setNames(data_hap1_pr[1,],rownames(data_hap1_pr))
data_hap1_pr[1,]
data_hap1_pr[,1]
#Running D.test on the data
data_hap1_pr_mod<-setNames(data_hap1_pr[,1],rownames(data_hap1_pr))
data_hap1_pr_mod
data_hap1_pr[,1]
data_hap1_pr_mod
#Running D.test on the data
data_hap1_pr_hap<-setNames(data_hap1_pr[,1],rownames(data_hap1_pr))
data_hap1_pr_eus<-setNames(data_hap1_pr[,2],rownames(data_hap1_pr))
data_hap1_pr_eus
remove(data_hap1_pr_mod)
map1<-make.simmap(tree_hap1_pr,data_hap1_pr_hap,model="ER",nsim=1000)
map1
map2<-make.simmap(tree_hap1_pr,data_hap1_pr_hap,model="ARD",nsim=1000)
View(map1)
remove(map1,map2)
map1_hap_ER<-make.simmap(tree_hap1_pr,data_hap1_pr_hap,model="ER",nsim=1000)
library(phylolm)
library(phytools)
library(treedata.table)
library(phylolm)
library(phytools)
library(treedata.table)
?Dtest()
class(map1_hap_ER)
#simmaps for haplodiploidy
map1_hap_ER<-make.simmap(tree_hap1_pr,data_hap1_pr_hap,model="ER",nsim=1000)
#simmaps for haplodiploidy
map1_eus_ER<-make.simmap(tree_hap1_pr,data_hap1_pr_eus,model="ER",nsim=1000)
#Running D test
dtest_1<-Dtest(map1_hap_ER,map1_eus_ER,nsim = 1000)
library(phylolm)
library(phytools)
library(treedata.table)
#Running D test
dtest_1<-Dtest(map1_hap_ER,map1_eus_ER,nsim = 1000)
library(phylolm)
library(phytools)
library(treedata.table)
#Running D test
dtest_1<-Dtest(map_hap_ER1,map_eus_ER1)
#simmaps for haplodiploidy
map_eus_ER1<-make.simmap(tree_hap1_pr,data_hap1_pr_eus,model="ER",nsim=100)
#simmaps for haplodiploidy
map_hap_ER1<-make.simmap(tree_hap1_pr,data_hap1_pr_hap,model="ER",nsim=100)
library(phylolm)
library(phytools)
library(treedata.table)
#simmaps for haplodiploidy
map_hap_ER1<-make.simmap(tree_hap1_pr,data_hap1_pr_hap,model="ER",nsim=10)
#simmaps for haplodiploidy
map_eus_ER1<-make.simmap(tree_hap1_pr,data_hap1_pr_eus,model="ER",nsim=10)
#Running D test
dtest_1<-Dtest(map_hap_ER1,map_eus_ER1)
library(phylolm)
library(phytools)
library(treedata.table)
#simmaps for haplodiploidy
map_hap_ER1<-make.simmap(tree_hap1_pr,data_hap1_pr_hap,model="ER",nsim=10)
map_hap_ARD1<-make.simmap(tree_hap1_pr,data_hap1_pr_hap,model="ARD",nsim=10)
#simmaps for haplodiploidy
map_eus_ER1<-make.simmap(tree_hap1_pr,data_hap1_pr_eus,model="ER",nsim=10)
map_eus_ARD1<-make.simmap(tree_hap1_pr,data_hap1_pr_eus,model="ARD",nsim=10)
#Running D test
dtest_ER1<-Dtest(map_hap_ER1,map_eus_ER1,nsim=10)
dtest_ER1
dtest_ARD1<-Dtest(map_hap_ARD1,map_eus_ARD1,nsim=10)
dtest_ARD1
library(phylolm)
library(phytools)
library(treedata.table)
install.packages("phylolm")
library(phylolm)
library(phytools)
library(treedata.table)
map_eus_ARD1
dtest_ER1<-Dtest(map_hap_ER1,map_eus_ER1,nsim=10)
?Dtest()
dtest_ER1<-Dtest(map_hap_ER1,map_eus_ER1,nsim=10)
dtest_ER1
dtest_ARD1$`E(D|X)`
dtest_ARD1
dtest_ER1$`E(D|X)`
dtest_ER1
dtest_ER1$`E(D|X)`
dtest_ER1
dtest_ER1$`P(D)`
dtest_ER1$`E(Dij)`
dtest_ER1$`P(Dij)`
dtest_ARD1
dtest_ER1$`E(D|X)`
dtest_ER1$`P(D)`
dtest_ER1$`E(Dij)`
dtest_ER1$`P(Dij)`
dtest_ER1$`E(Dij)`
dtest_ARD1$`E(D|X)`
dtest_ARD1$`P(D)`
dtest_ARD1$`E(Dij)`
dtest_ARD1$`P(Dij)`
data_hap1_pr<-read.csv("Datafile S3.csv",header=TRUE,row.names = 1)
library(phytools)
#For first analysis: Removing eusociality presence for aphids
tree_hap1_pr<-read.nexus("Datafile S1.nexus")
data_hap1_pr<-read.csv("Datafile S3.csv",header=TRUE,row.names = 1)
remove(list=ls())
library(phytools)
library(treedata.table)
#For first analysis: Removing eusociality presence for aphids
tree_hap1_pr<-read.nexus("Datafile S1.nexus")
data_hap1_pr<-read.csv("Datafile S3.csv",header=TRUE,row.names = 1)
#Extracting the hapldoiploidy and eusociality with tips
data_hap1_pr_hap<-setNames(data_hap1_pr[,1],rownames(data_hap1_pr))
data_hap1_pr_eus<-setNames(data_hap1_pr[,2],rownames(data_hap1_pr))
#simmaps for haplodiploidy
map_hap_ER1<-make.simmap(tree_hap1_pr,data_hap1_pr_hap,model="ER",nsim=100)
map_hap_ARD1<-make.simmap(tree_hap1_pr,data_hap1_pr_hap,model="ARD",nsim=100)
#simmaps for haplodiploidy
map_eus_ER1<-make.simmap(tree_hap1_pr,data_hap1_pr_eus,model="ER",nsim=100)
map_eus_ARD1<-make.simmap(tree_hap1_pr,data_hap1_pr_eus,model="ARD",nsim=100)
#Running D test
dtest_ER1<-Dtest(map_hap_ER1,map_eus_ER1,nsim=100)
dtest_ER1
dtest_ER1$`E(D|X)`
dtest_ER1
dtest_ER1$`E(D|X)`
dtest_ER1$`P(D)`
dtest_ER1$`E(Dij)`
dtest_ER1$`P(Dij)`
library(phytools)
library(treedata.table)
#For first analysis: Removing eusociality presence for aphids
tree_hap1_pr<-read.nexus("Datafile S1.nexus")
data_hap1_pr<-read.csv("Datafile S3.csv",header=TRUE,row.names = 1)
dtest_ER1
dtest_ARD1<-Dtest(map_hap_ARD1,map_eus_ARD1,nsim=100)
library(phytools)
dtest_ARD1<-Dtest(map_hap_ARD1,map_eus_ARD1,nsim=100)
dtest_ARD1<-Dtest(map_hap_ARD1,map_eus_ARD1,nsim=100)
dtest_ARD1
dtest_ARD1$`E(D|X)`
dtest_ARD1$`P(D)`
dtest_ARD1$`E(Dij)`
dtest_ARD1$`P(Dij)`
dtest_ER_ARD1
load("G:/My Drive/Eusociality paper files_June 2022/Eusociality paper data files_2021/revision_Evol_14Dec2021/revision_Evol_14Dec2021/Data Files/.RData")
dtest_ER_ARD1
dtest_ER_ARD_2<-Dtest(map_hap_ER1,map_eus_ARD1,nsim=100)
library(phytools)
dtest_ER_ARD_2<-Dtest(map_hap_ER1,map_eus_ARD1,nsim=100)
dtest_ER_ARD_2
dtest_ER_ARD_2$`E(D|X)`
dtest_ER_ARD_2$`P(D)`
dtest_ER_ARD_2$`E(Dij)`
dtest_ER_ARD_2$`P(Dij)`
map_hap_ARD1
map_hap_ARD1$
d
map_eus_ARD1
library(phytools)
map_eus_ARD1$
si
map_eus_ARD1$
d
map_eus_ARD1
map_eus_ARD1
map_hap_ARD1
map_eus_ER1
map_eus_ARD1
map_eus_ARD1$po
?make.simmap
plot(map_eus_ARD1)
dtest_ARD1
#Doing phylogenetic regression without any manipulations in the data
tree_hap1<-read.nexus("Datafile S1.nexus")
library(phylolm)
library(phytools)
library(treedata.table)
#Doing phylogenetic regression without any manipulations in the data
tree_hap1<-read.nexus("Datafile S1.nexus")
data_hap1<-read.csv("Datafile S3.csv")
#Phylogenetic regression with MPLE model
#Eusociality as a function of haplodiploidy
hap_glm_1<-phyloglm(Eusociality~Haplodiploidy,data =data_hap1,phy= tree_hap1,method = c("logistic_MPLE"),boot=1000)
#Doing phylogenetic regression without any manipulations in the data
tree_hap1<-read.nexus("Datafile S1.nexus")
data_hap1<-read.csv("Datafile S3.csv")
hap_glm_1<-phyloglm(Eusociality~Haplodiploidy,data =data_hap1,phy= tree_hap1,method = c("logistic_MPLE"),boot=1000)
#Doing phylogenetic regression without any manipulations in the data
tree_hap1<-read.nexus("Datafile S1.nexus")
data_hap1<-read.csv("Datafile S3.csv",header=TRUE,row.names = 1)
hap_glm_1<-phyloglm(Eusociality~Haplodiploidy,data =data_hap1,phy= tree_hap1,method = c("logistic_MPLE"),boot=1000)
summary(hap_glm_1a)
summary(hap_glm_1)
#Haplodiploidy as a function of eusocuality
hap_glm_2<-phyloglm(Haplodiploidy~Eusociality,data =data_hap1,phy= tree_hap1,method = c("logistic_MPLE"),boot=1000)
summary(hap_glm_2)
tree_hap1<-read.nexus("Datafile S1.nexus")
library(phytools)
library(treedata.table)
library(phylolm)
#Doing phylogenetic regression without any manipulations in the data
tree_hap1<-read.nexus("Datafile S1.nexus")
data_hap1<-read.csv("Datafile S3.csv",header=TRUE,row.names = 1)
summary(hap_glm_1)
hap_glm_1<-phyloglm(Eusociality~Haplodiploidy,data =data_hap1,phy= tree_hap1,method = c("logistic_MPLE"),boot=1000)
remove(tree_hap1)
tree_phyreg1<-read.nexus("Datafile S1.nexus")
data_phyreg1<-read.csv("Datafile S3.csv",header=TRUE,row.names = 1)
tree_phyreg1<-read.nexus("Datafile S1.nexus")
data_phyreg1<-read.csv("Datafile S3.csv",header=TRUE,row.names = 1)
#Phylogenetic regression with MPLE model
#Eusociality as a function of haplodiploidy
phyreg_glm1<-phyloglm(Eusociality~Haplodiploidy,data =data_phyreg1,phy=tree_phyreg1,method = c("logistic_MPLE"),boot=1000)
#Phylogenetic regression with MPLE model
#Eusociality as a function of haplodiploidy
phyreg_glm1a<-phyloglm(Eusociality~Haplodiploidy,data =data_phyreg1,phy=tree_phyreg1,method = c("logistic_MPLE"),boot=1000)
summary(phyreg_glm1a)
#Haplodiploidy as a function of eusocuality
phyreg_glmb<-phyloglm(Haplodiploidy~Eusociality,data =data_phyreg1,phy= tree_phyreg1,method = c("logistic_MPLE"),boot=1000)
summary(phyreg_glm1b)
remove(phyreg_glmb)
phyreg_glm1b<-phyloglm(Haplodiploidy~Eusociality,data =data_phyreg1,phy= tree_phyreg1,method = c("logistic_MPLE"),boot=1000)
summary(phyreg_glm1b)
#For first analysis: Removing eusociality presence for aphids
tree_phyreg2<-read.nexus("Datafile S1.nexus")
data_phyreg2<-read.csv("Datafile S3_aphid.csv",header=TRUE,row.names = 1)
#Phylogenetic regression with MPLE model
#Eusociality as a function of haplodiploidy
phyreg_glm2a<-phyloglm(Eusociality~Haplodiploidy,data =data_phyreg2,phy= tree_phyreg2,method = c("logistic_MPLE"),boot=1000)
summary(phyreg_glm2a)
summary(phyreg_glm2b)
phyreg_glm2b<-phyloglm(Haplodiploidy~Eusociality,data =data_phyreg2,phy= tree_phyreg2,method = c("logistic_MPLE"),boot=1000)
summary(phyreg_glm2b)
#For second analysis: Removing eusociality presence for aphids and termites
tree_phyreg3<-read.nexus("Datafile S1.nexus")
data_phyreg3<-read.csv("Datafile S3_aphid_termite.csv",header=TRUE,row.names = 1)
#Phylogenetic regression with MPLE model
#Eusociality as a function of haplodiploidy
hap_glm_3a<-phyloglm(Eusociality~Haplodiploidy,data =data_phyreg3,phy= tree_phyreg3,method = c("logistic_MPLE"),boot=1000)
summary(phyreg_glm3a)
#For second analysis: Removing eusociality presence for aphids and termites
tree_phyreg3<-read.nexus("Datafile S1.nexus")
data_phyreg3<-read.csv("Datafile S3_aphid_termite.csv",header=TRUE,row.names = 1)
#Phylogenetic regression with MPLE model
#Eusociality as a function of haplodiploidy
phyreg_glm3a<-phyloglm(Eusociality~Haplodiploidy,data =data_phyreg3,phy= tree_phyreg3,method = c("logistic_MPLE"),boot=1000)
summary(phyreg_glm3a)
phyreg_glm3b<-phyloglm(Haplodiploidy~Eusociality,data =data_phyreg3,phy= tree_phyreg3,method = c("logistic_MPLE"),boot=1000)
summary(phyreg_glm3b)
#For third analysis: Removing haplodiploidy presence for some of the families
tree_phyreg4<-read.nexus("Datafile S1.nexus")
data_phyreg4<-read.csv("Datafile S3_hap_removal.csv",header=TRUE,row.names = 1)
#For third analysis: Removing haplodiploidy presence for some of the families
tree_phyreg4<-read.nexus("Datafile S1.nexus")
data_phyreg4<-read.csv("Datafile S3_hap_removal.csv",header=TRUE,row.names = 1)
#Phylogenetic regression with MPLE model
#Eusociality as a function of haplodiploidy
phyreg_glm4a<-phyloglm(Eusociality~Haplodiploidy,data =data_phyreg4,phy= tree_phyreg4,method = c("logistic_MPLE"),boot=1000)
summary(phyreg_glm4a)
#Haplodiploidy as a function of eusocuality
phyreg_glm4b<-phyloglm(Haplodiploidy~Eusociality,data =data_hap3_pr,phy= tree_hap3_pr,method = c("logistic_MPLE"),boot=1000)
#Haplodiploidy as a function of eusocuality
phyreg_glm4b<-phyloglm(Haplodiploidy~Eusociality,data =data_phyreg4,phy= tree_phyreg4,method = c("logistic_MPLE"),boot=1000)
summary(phyreg_glm4b)
tree_phyreg5<-read.nexus("Datafile S7.nexus")
tree_phyreg5<-read.nexus("Datafile S7.nexus")
getwd)
getwd()
tree_phyreg5<-read.nexus("Datafile S7.tre")
tree_phyreg5<-read.tree("Datafile S7.tre")
tree_phyreg5
data_hap1_pr<-read.csv("Datafile S4.csv",header=TRUE,row.names = 1)
tree_hap1_pr<-read.nexus("Datafile S1.nexus")
data_hap1_pr<-read.csv("Datafile S3.csv",header=TRUE,row.names = 1)
tree_phyreg5<-read.tree("Datafile S7.tre")
data_phyreg5<-read.csv("Datafile S4.csv",header=TRUE,row.names = 1)
#Phylogenetic regression with MPLE model
#Eusociality as a function of haplodiploidy
phyreg_glm5a<-phyloglm(Eusociality~Haplodiploidy,data =data_phyreg5,phy=tree_phyreg5,method = c("logistic_MPLE"),boot=1000)
summary(phyreg_glm5a)
#Haplodiploidy as a function of eusocuality
phyreg_glm5b<-phyloglm(Haplodiploidy~Eusociality,data =data_phyreg5,phy=tree_phyreg5,method = c("logistic_MPLE"),boot=1000)
summary(phyreg_glm5b)
#Removing eusociality presence for aphids
tree_phyreg6<-read.tree("Datafile S7.tre")
library(phytools)
library(treedata.table)
library(phylolm)
#Removing eusociality presence for aphids
tree_phyreg6<-read.tree("Datafile S7.tre")
data_phyreg6<-read.csv("Datafile S4_aphid.csv",header=TRUE,row.names = 1)
#Phylogenetic regression with MPLE model
#Eusociality as a function of haplodiploidy
phyreg_glm6a<-phyloglm(Eusociality~Haplodiploidy,data =data_phyreg6,phy=tree_phyreg6,method = c("logistic_MPLE"),boot=1000)
summary(phyreg_glm6a)
#Haplodiploidy as a function of eusocuality
phyreg_glm5b<-phyloglm(Haplodiploidy~Eusociality,data =data_phyreg5,phy=tree_phyreg5,method = c("logistic_MPLE"),boot=1000)
summary(phyreg_glm5b)
summary(phyreg_glm6a)
phyreg_glm5b<-phyloglm(Haplodiploidy~Eusociality,data =data_phyreg5,phy=tree_phyreg5,method = c("logistic_MPLE"),boot=1000)
summary(phyreg_glm5b)
#Haplodiploidy as a function of eusocuality
phyreg_glm6b<-phyloglm(Haplodiploidy~Eusociality,data =data_phyreg5,phy=tree_phyreg5,method = c("logistic_MPLE"),boot=1000)
#Haplodiploidy as a function of eusocuality
phyreg_glm6b<-phyloglm(Haplodiploidy~Eusociality,data =data_phyreg6,phy=tree_phyreg6,method = c("logistic_MPLE"),boot=1000)
summary(phyreg_glm6b)
#Removing eusociality presence for aphids and termites
tree_phyreg7<-read.tree("Datafile S7.tre")
data_phyreg7<-read.csv("Datafile S4_aphid_termite.csv",header=TRUE,row.names = 1)
#Phylogenetic regression with MPLE model
#Eusociality as a function of haplodiploidy
phyreg_glm7a<-phyloglm(Eusociality~Haplodiploidy,data =data_phyreg7,phy=tree_phyreg7,method = c("logistic_MPLE"),boot=1000)
summary(phyreg_glm7a)
#Haplodiploidy as a function of eusocuality
phyreg_glm7b<-phyloglm(Haplodiploidy~Eusociality,data =data_phyreg7,phy=tree_phyreg7,method = c("logistic_MPLE"),boot=1000)
summary(phyreg_glm7b)
#Removing haplodiploidy presence for some of the families
tree_phyreg4<-read.nexus("Datafile S1.nexus")
data_phyreg4<-read.csv("Datafile S3_hap_removal.csv",header=TRUE,row.names = 1)
#Phylogenetic regression with MPLE model
#Eusociality as a function of haplodiploidy
phyreg_glm4a<-phyloglm(Eusociality~Haplodiploidy,data =data_phyreg4,phy= tree_phyreg4,method = c("logistic_MPLE"),boot=1000)
summary(phyreg_glm4a)
#Haplodiploidy as a function of eusocuality
phyreg_glm4b<-phyloglm(Haplodiploidy~Eusociality,data =data_phyreg4,phy= tree_phyreg4,method = c("logistic_MPLE"),boot=1000)
summary(phyreg_glm4b)
tree_phyreg8<-read.tree("Datafile S7.tre")
data_phyreg8<-read.csv("Datafile S4_hap_removal.csv",header=TRUE,row.names = 1)
#Phylogenetic regression with MPLE model
#Eusociality as a function of haplodiploidy
phyreg_glm8a<-phyloglm(Eusociality~Haplodiploidy,data =data_phyreg8,phy= tree_phyreg8,method = c("logistic_MPLE"),boot=1000)
summary(phyreg_glm8a)
#Haplodiploidy as a function of eusocuality
phyreg_glm8b<-phyloglm(Haplodiploidy~Eusociality,data =data_phyreg8,phy= tree_phyreg8,method = c("logistic_MPLE"),boot=1000)
summary(phyreg_glm8b)
library(phytools)
library(treedata.table)
library(phylolm)
#No manipulations in the data
tree_phyreg9<-read.nexus("Datafile S1.nexus")
data_phyreg9<-read.csv("Datafile S5.csv",header=TRUE,row.names = 1)
#No manipulations in the data
tree_phyreg9<-read.nexus("Datafile S1.nexus")
data_phyreg9<-read.csv("Datafile S5.csv",header=TRUE,row.names = 1)
#Phylogenetic regression with MPLE model
#Eusociality as a function of haplodiploidy
phyreg_glm9a<-phyloglm(Eusociality~Haplodiploidy,data =data_phyreg9,phy=tree_phyreg9,method = c("logistic_MPLE"),boot=1000)
summary(phyreg_glm9a)
#Haplodiploidy as a function of eusocuality
phyreg_glm9b<-phyloglm(Haplodiploidy~Eusociality,data =data_phyreg9,phy=tree_phyreg9,method = c("logistic_MPLE"),boot=1000)
summary(phyreg_glm9b)
tree_hap1_pr<-read.nexus("Datafile S1.nexus")
data_hap1_pr<-read.csv("Datafile S3.csv",header=TRUE,row.names = 1)
#Removing eusociality presence for aphids
tree_phyreg10<-read.tree("Datafile S1.tre")
data_phyreg10<-read.csv("Datafile S5_aphid.csv",header=TRUE,row.names = 1)
#Removing eusociality presence for aphids
tree_phyreg10<-read.nexus("Datafile S1.nexus")
data_phyreg10<-read.csv("Datafile S5_aphid.csv",header=TRUE,row.names = 1)
#Phylogenetic regression with MPLE model
#Eusociality as a function of haplodiploidy
phyreg_glm10a<-phyloglm(Eusociality~Haplodiploidy,data =data_phyreg10,phy=tree_phyreg10,method = c("logistic_MPLE"),boot=1000)
summary(phyreg_glm10a)
#Haplodiploidy as a function of eusocuality
phyreg_glm10b<-phyloglm(Haplodiploidy~Eusociality,data =data_phyreg10,phy=tree_phyreg10,method = c("logistic_MPLE"),boot=1000)
summary(phyreg_glm10b)
#Removing eusociality presence for aphids and termites
tree_phyreg11<-read.nexus("Datafile S1.nexus")
data_phyreg11<-read.csv("Datafile S5_aphid_termite.csv",header=TRUE,row.names = 1)
#Phylogenetic regression with MPLE model
#Eusociality as a function of haplodiploidy
phyreg_glm11a<-phyloglm(Eusociality~Haplodiploidy,data =data_phyreg11,phy=tree_phyreg11,method = c("logistic_MPLE"),boot=1000)
summary(phyreg_glm11b)
library(phytools)
library(treedata.table)
library(phylolm)
summary(phyreg_glm11b)
data_phyreg1
phyreg_glm10a
summary(phyreg_glm10b)
#Phylogenetic regression with MPLE model
#Eusociality as a function of haplodiploidy
phyreg_glm11a<-phyloglm(Eusociality~Haplodiploidy,data =data_phyreg11,phy=tree_phyreg11,method = c("logistic_MPLE"),boot=1000)
summary(phyreg_glm11a)
#Haplodiploidy as a function of eusocuality
phyreg_glm11b<-phyloglm(Haplodiploidy~Eusociality,data =data_phyreg11,phy=tree_phyreg11,method = c("logistic_MPLE"),boot=1000)
summary(phyreg_glm11b)
tree_phyreg12<-read.nexus("Datafile S1.nexus")
data_phyreg12<-read.csv("Datafile S5_hap_removal.csv",header=TRUE,row.names = 1)
tree_phyreg12<-read.nexus("Datafile S1.nexus")
data_phyreg12<-read.csv("Datafile S5_hap_removal.csv",header=TRUE,row.names = 1)
#Phylogenetic regression with MPLE model
#Eusociality as a function of haplodiploidy
phyreg_glm12a<-phyloglm(Eusociality~Haplodiploidy,data =data_phyreg12,phy=tree_phyreg12,method = c("logistic_MPLE"),boot=1000)
summary(phyreg_glm12a)
#Haplodiploidy as a function of eusocuality
phyreg_glm12b<-phyloglm(Haplodiploidy~Eusociality,data =data_phyreg12,phy=tree_phyreg12,method = c("logistic_MPLE"),boot=1000)
summary(phyreg_glm12b)
tree_hap2_pr<-read.tree("Datafile S7.tre")
data_hap2_pr<-read.csv("Datafile S4.csv",header=TRUE,row.names = 1)
#Extracting the hapldoiploidy and eusociality with tips
data_hap2_pr_hap<-setNames(data_hap2_pr[,1],rownames(data_hap2_pr))
data_hap2_pr_eus<-setNames(data_hap2_pr[,2],rownames(data_hap2_pr))
data_hap2_pr_eus
#simmaps for haplodiploidy
map_hap_ER2<-make.simmap(tree_hap2_pr,data_hap2_pr_hap,model="ER",nsim=100)
map_hap_ARD2<-make.simmap(tree_hap2_pr,data_hap2_pr_hap,model="ARD",nsim=100)
#simmaps for eusociality
map_eus_ARD2<-make.simmap(tree_hap2_pr,data_hap2_pr_eus,model="ARD",nsim=100)
map_eus_ARD2
#Running D test
dtest_ARD2<-Dtest(map_hap_ARD2,map_eus_ARD2,nsim=100)
dtest_ARD2
getwd()
library(phytools)
library(treedata.table)
library(phylolm)
dtest_ARD2
dtest_ER_ARD_3<-Dtest(map_hap_ER2,map_eus_ARD2,nsim=100)
library(phytools)
library(treedata.table)
library(phylolm)
data_hap3_pr<-read.csv("Datafile S5.csv",header=TRUE,row.names = 1)
tree_hap3_pr<-read.nexus("Datafile S1.nexus")
data_hap3_pr<-read.csv("Datafile S5.csv",header=TRUE,row.names = 1)
#Extracting the hapldoiploidy and eusociality with tips
data_hap3_pr_hap<-setNames(data_hap3_pr[,1],rownames(data_hap3_pr))
data_hap3_pr_eus<-setNames(data_hap3_pr[,2],rownames(data_hap3_pr))
#simmaps for haplodiploidy
map_hap_ARD3<-make.simmap(tree_hap3_pr,data_hap3_pr_hap,model="ARD",nsim=100)
#simmaps for eusociality
map_eus_ARD3<-make.simmap(tree_hap3_pr,data_hap3_pr_eus,model="ARD",nsim=100)
map_eus_ER3<-make.simmap(tree_hap3_pr,data_hap3_pr_eus,model="ARD",nsim=100)
map_eus_ER3
library(phytools)
library(treedata.table)
library(phylolm)
dtest_ER_ARD_3<-Dtest(map_hap_ER2,map_eus_ARD2,nsim=100)
dtest_ER_ARD_3
library(phytools)
library(treedata.table)
library(phylolm)
dtest_ER_ARD_3
dtest_ARD3
#Running D tests
dtest_ARD3<-Dtest(map_hap_ARD3,map_eus_ARD3,nsim=100)
dtest_ARD3
dtest_ER_ARD_4<-Dtest(map_hap_ARD3,map_eus_ER3,nsim=100)
